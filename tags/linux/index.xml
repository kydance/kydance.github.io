<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Linux - Tag - KyteDance-鸢舞</title>
        <link>https://kydance.github.io/tags/linux/</link>
        <description>Linux - Tag - KyteDance-鸢舞</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>kytedance@gmail.com (kyden)</managingEditor>
            <webMaster>kytedance@gmail.com (kyden)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 08 May 2024 11:43:38 &#43;0800</lastBuildDate><atom:link href="https://kydance.github.io/tags/linux/" rel="self" type="application/rss+xml" /><item>
    <title>Golang Netpoll</title>
    <link>https://kydance.github.io/posts/golang-netpoll/</link>
    <pubDate>Wed, 08 May 2024 11:43:38 &#43;0800</pubDate>
    <author>kyden</author>
    <guid>https://kydance.github.io/posts/golang-netpoll/</guid>
    <description><![CDATA[<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>导语<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">深入剖析 Golang 网络编程之 Netpoll，主要涉及 Linux 环境下的 Epoll 初始化、 Go 网络编程基本流程（Listen、Accept、Read、Write）以及netpoll 执行流程</div>
        </div>
    </div>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>Golang 源码版本<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">本文所涉及的源码版本：<a href="https://github.com/golang/go/tree/release-branch.go1.22/src" target="_blank" rel="noopener noreffer ">v1.22.3</a></div>
        </div>
    </div>
<h2 id="i-基础概念">I. 基础概念</h2>
<p><strong>网络编程，是允许不同计算机上的程序通过网络通信的开发过程，涉及多种协议（HTTP、TCP/IP等）以及不同编程语言的应用</strong>。</p>
<h3 id="同步异步并发模型">同步、异步、并发模型</h3>
<table>
<thead>
<tr>
<th>IO 模型</th>
<th style="text-align:left">读写操作和阻塞阶段</th>
</tr>
</thead>
<tbody>
<tr>
<td>阻塞 IO</td>
<td style="text-align:left">程序阻塞于读写函数</td>
</tr>
<tr>
<td>IO 复用</td>
<td style="text-align:left">程序阻塞于 IO 复用系统调用，但可同时监听多个 IO 事件；对 IO 本身的读写操作是非阻塞的</td>
</tr>
<tr>
<td>SIGIO 信号</td>
<td style="text-align:left">信号触发读写就绪事件，用户程序执行读写操作；程序本身没有阻塞阶段</td>
</tr>
<tr>
<td>异步 IO</td>
<td style="text-align:left">内核执行读写操作并触发读写完成事件；程序没有阻塞阶段</td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>主要用于区分内核向应用程序通知的是何种 IO 事件（就绪事件 or 完成事件），以及由谁来完成 IO 读写（应用程序 or 内核）</strong></p>
</blockquote>
<h4 id="io模型中的同步">IO模型中的同步</h4>
<ul>
<li><strong>同步</strong> IO 模型，指的是应用程序发起 IO 操作后，必须等待 IO 操作完成后才能继续执行后续的操作，即 IO 操作的结果需要立即返回给应用程序；在此期间，应用程序处于阻塞状态，无法做其他操作。</li>
<li>优点：编程模型简单</li>
<li>缺点：效率较低（应用程序的执行速度被 IO 操作所限制）</li>
</ul>
<blockquote>
<p><strong>对于操作系统内核来说，同步 IO 操作是指在内核处理 IO 请求时需要等待</strong></p>
</blockquote>
<h4 id="io-模型中的异步">IO 模型中的异步</h4>
<ul>
<li><strong>异步</strong> IO 模型，指的是应用程序发起 IO 操作后，无须等待 IO 操作完成，可以立即进行后续的操作；在此期间，操作系统负责把 IO 操作的结果返回给应用程序；</li>
<li>优点：可以充分利用系统资源，提高 IO 操作的效率</li>
<li>缺点：编程模型相对复杂</li>
</ul>
<blockquote>
<p><strong>对于操作系统内核来说，异步 IO 操作指的是，在内核处理 IO 请求时无需等待，立即返回</strong></p>
</blockquote>
<h4 id="并发模式">并发模式</h4>
<blockquote>
<p><strong>并发模式，指的是 I/O 处理单元和多个逻辑单元之间协调完成任务的方法</strong></p>
</blockquote>
<h3 id="linux-epoll">Linux Epoll</h3>
<figure>
</figure>

<ul>
<li>
<p>epoll 在内核里使用<strong>红黑树(Red-black tree)来跟踪进程所有待检测的文件描述字 <code>fd</code></strong>，把需要监控的 socket 通过 <code>epoll_ctl()</code> 函数加入内核中的红黑树里（红黑树是个高效的数据结构，增删改一般时间复杂度是 <code>O(logn)</code>）</p>
</li>
<li>
<p>epoll 使用<strong>事件驱动</strong>的机制，在内核里<strong>维护了一个链表(List)来记录就绪事件</strong>。
当某个 socket 有事件发生时，内核通过<strong>回调函数</strong>将其加入到这个就绪事件列表中。
当用户调用 <code>epoll_wait()</code> 函数时，<strong>只</strong>会返回有事件发生的文件描述符的个数，不需要像 select/poll 那样轮询扫描整个 socket 集合，大大提高了检测的效率</p>
</li>
<li>
<p>两种触发模式</p>
<ul>
<li><strong>Level trigger</strong>：服务器端不断地从 epoll_wait 中苏醒，直到内核缓冲区数据被 read 函数读完才结束</li>
<li><strong>Edge trigger</strong>：服务器端只会从 epoll_wait 中苏醒一次</li>
</ul>
</li>
<li>
<p>事件宏</p>
<ul>
<li><code>EPOLLIN</code> 表示对应的文件描述符<strong>可读（包括对端 socket 正常关闭）</strong></li>
<li><code>EPOLLOUT</code> 表示对应的文件描述符<strong>可写</strong></li>
<li><code>EPOLLPRI</code> 表示对应的文件描述符<strong>有紧急的数据可读（带外数据）</strong></li>
<li><code>EPOLLERR</code> 表示对应的文件描述符<strong>发生错误</strong></li>
<li><code>EPOLLHUP</code> 表示对应的文件描述符<strong>被挂断</strong></li>
<li><code>EPOLLET</code> 将 EPOLL 设为<strong>边缘触发模式</strong>（默认电平触发）</li>
<li><code>EPOLLONESHOT</code> <strong>只监听一次事件</strong>，当监听完这次事件之后，如果还需要继续监听这个 socket 的话，需要再次把这个 socket 加入到内核中的事件注册表中</li>
</ul>
</li>
</ul>
<h2 id="ii-应用示例">II. 应用示例</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Go" data-lang="Go"><span class="line"><span class="cl"><span class="kn">package</span> <span class="nx">main</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="s">&#34;net&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">l</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">net</span><span class="p">.</span><span class="nf">Listen</span><span class="p">(</span><span class="s">&#34;tcp&#34;</span><span class="p">,</span> <span class="s">&#34;127.0.0.1:2333&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">conn</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">l</span><span class="p">.</span><span class="nf">Accept</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="k">defer</span> <span class="nx">conn</span><span class="p">.</span><span class="nf">Close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="nx">buf</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">byte</span><span class="p">,</span> <span class="mi">4096</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nx">_</span><span class="p">,</span> <span class="nx">_</span> <span class="p">=</span> <span class="nx">conn</span><span class="p">.</span><span class="nf">Read</span><span class="p">(</span><span class="nx">buf</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">			<span class="nx">conn</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="nx">buf</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="p">}()</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="iii-相关数据结构">III. 相关数据结构</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Go" data-lang="Go"><span class="line"><span class="cl"><span class="c1">// src/net/fd_fake.go
</span></span></span><span class="line"><span class="cl"><span class="c1">// Network file descriptor.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">type</span> <span class="nx">netFD</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">pfd</span> <span class="nx">poll</span><span class="p">.</span><span class="nx">FD</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// immutable until Close
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">family</span>      <span class="kt">int</span>
</span></span><span class="line"><span class="cl">	<span class="nx">sotype</span>      <span class="kt">int</span>
</span></span><span class="line"><span class="cl">	<span class="nx">isConnected</span> <span class="kt">bool</span> <span class="c1">// handshake completed or use of association with peer
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">net</span>         <span class="kt">string</span>
</span></span><span class="line"><span class="cl">	<span class="nx">laddr</span>       <span class="nx">Addr</span>
</span></span><span class="line"><span class="cl">	<span class="nx">raddr</span>       <span class="nx">Addr</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// The only networking available in WASI preview 1 is the ability to
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// sock_accept on a pre-opened socket, and then fd_read, fd_write,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// fd_close, and sock_shutdown on the resulting connection. We
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// intercept applicable netFD calls on this instance, and then pass
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// the remainder of the netFD calls to fakeNetFD.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="o">*</span><span class="nx">fakeNetFD</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// poll.FD`: `src/internal/poll/fd_unix.go
</span></span></span><span class="line"><span class="cl"><span class="c1">// FD is a file descriptor. The net and os packages use this type as a
</span></span></span><span class="line"><span class="cl"><span class="c1">// field of a larger type representing a network connection or OS file.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">type</span> <span class="nx">FD</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Lock sysfd and serialize access to Read and Write methods.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">fdmu</span> <span class="nx">fdMutex</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// System file descriptor. Immutable until Close.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">Sysfd</span> <span class="kt">int</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// Platform dependent state of the file descriptor.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">SysFile</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// I/O poller.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">pd</span> <span class="nx">pollDesc</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// Semaphore signaled when file is closed.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">csema</span> <span class="kt">uint32</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// Non-zero if this file has been set to blocking mode.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">isBlocking</span> <span class="kt">uint32</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// Whether this is a streaming descriptor, as opposed to a
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// packet-based descriptor like a UDP socket. Immutable.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">IsStream</span> <span class="kt">bool</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// Whether a zero byte read indicates EOF. This is false for a
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// message based socket connection.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">ZeroReadIsEOF</span> <span class="kt">bool</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// Whether this is a file rather than a network socket.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">isFile</span> <span class="kt">bool</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// Addr represents a network end point address.
</span></span></span><span class="line"><span class="cl"><span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1">// The two methods [Addr.Network] and [Addr.String] conventionally return strings
</span></span></span><span class="line"><span class="cl"><span class="c1">// that can be passed as the arguments to [Dial], but the exact form
</span></span></span><span class="line"><span class="cl"><span class="c1">// and meaning of the strings is up to the implementation.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">type</span> <span class="nx">Addr</span> <span class="kd">interface</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">Network</span><span class="p">()</span> <span class="kt">string</span> <span class="c1">// name of the network (for example, &#34;tcp&#34;, &#34;udp&#34;)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nf">String</span><span class="p">()</span> <span class="kt">string</span>  <span class="c1">// string form of address (for example, &#34;192.0.2.1:25&#34;, &#34;[2001:db8::1]:80&#34;)
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// fdMutex is a specialized synchronization primitive that manages
</span></span></span><span class="line"><span class="cl"><span class="c1">// lifetime of an fd and serializes access to Read, Write and Close
</span></span></span><span class="line"><span class="cl"><span class="c1">// methods on FD.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">type</span> <span class="nx">fdMutex</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">state</span> <span class="kt">uint64</span>
</span></span><span class="line"><span class="cl">	<span class="nx">rsema</span> <span class="kt">uint32</span>
</span></span><span class="line"><span class="cl">	<span class="nx">wsema</span> <span class="kt">uint32</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">type</span> <span class="nx">SysFile</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Writev cache.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">iovecs</span> <span class="o">*</span><span class="p">[]</span><span class="nx">syscall</span><span class="p">.</span><span class="nx">Iovec</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">type</span> <span class="nx">pollDesc</span> <span class="kd">struct</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">runtimeCtx</span> <span class="kt">uintptr</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>通过源码可以看到，Golang 网络编程涉及到的 <code>netFD</code>, <code>poll.FD</code>, <code>Addr</code>, <code>SysFile</code> 以及 <code>pollDesc</code> 之间的关系如下：</p>
<ul>
<li><code>fdmu</code> 是为了保证对同一个文件的读、写操作能分别被序列化</li>
<li><code>Sysfd</code> 就是操作系统中 <code>syscall</code> 返回的 fd 值</li>
<li><code>pd</code>，<code>pollDesc</code> I/O poller，是 Go 对 poll 过程的一个抽象，所有平台的抽象都是一样的</li>
<li><code>csema</code>，当文件被关闭时会被触发</li>
<li><code>isBlocking</code> 表明 FD 是否为 blocking 模式</li>
<li><code>IsStream</code> 标志该 FD 是否是流式，与流式相反的是基于 packet 的，即 UDP socket</li>
<li><code>ZeroReadIsEOF</code>，当连接读到 0 长度时，用来区分是否代表 EOF. 如果是基于 packet 的 socket 连接，则始终是 <code>false</code></li>
<li><code>isFile</code> 标志该 FD 是否代表文件，还是网络连接</li>
<li><strong><code>netFD</code> 结构中包含一个 <code>poll.FD</code> 类型的成员 <code>pfd</code>，以及 <code>Addr</code> 接口类型的 <code>laddr</code> 和 <code>raddr</code></strong></li>
<li><strong><code>poll.FD</code> 结构含有 <code>SysFile</code> 和 <code>pollDesc</code> 类型的成员，以及 <code>fdMutex</code> 类型的 <code>fdmu</code></strong></li>
</ul>
<h2 id="iv-tcp-网络编程基本流程">IV. TCP 网络编程基本流程</h2>
<p>本部分涉及众多函数调用，为了描述清晰，采用了图的形式，其中，每一块第一行表示该块所表示的函数名称，其他部分表示该函数中关键函数调用。</p>
<h3 id="创建-tcp-socket-并监听-netlisten">创建 TCP socket 并监听: <code>net.Listen</code></h3>
<figure>
</figure>

<blockquote>
<p>NOTE</p>
<p><strong>需要注意的是，在执行 <code>net.(*netFD).listenStream</code> 之前，由于 <code>maxListenerBacklog</code> 函数调用了 <code>open(&quot;/proc/sys/net/core/somaxconn&quot;)</code>，则会导致 epoll 底层红黑树的提前创建: <code>runtime.netpollinit</code> -&gt; <code>syscall.EpollCreate1</code> -&gt; <code>Syscall6(SYS_EPOLL_CREATE1, uintptr(flags), 0, 0, 0, 0, 0)</code></strong>.</p>
<p>另外，当启用 Timer 时，也存在提前初始化 netpoll 的可能，原因：
<strong>Timers rely on the network poller</strong></p>
<p><code>time.NewTimer</code> -&gt; <code>runtime.startTimer</code> -&gt; <code>runtime.addtimer</code> -&gt; <code>runtime.doaddtimer</code> -&gt; <code>netpollGenericInit()</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Go" data-lang="Go"><span class="line"><span class="cl"><span class="c1">// doaddtimer adds t to the current P&#39;s heap.
</span></span></span><span class="line"><span class="cl"><span class="c1">// The caller must have locked the timers for pp.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">func</span> <span class="nf">doaddtimer</span><span class="p">(</span><span class="nx">pp</span> <span class="o">*</span><span class="nx">p</span><span class="p">,</span> <span class="nx">t</span> <span class="o">*</span><span class="nx">timer</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Timers rely on the network poller, so make sure the poller
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// has started.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span> <span class="nx">netpollInited</span><span class="p">.</span><span class="nf">Load</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nf">netpollGenericInit</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div></blockquote>
<h3 id="获取-tcp-连接-nettcplisteneraccept">获取 TCP 连接: <code>net.(*TCPListener).Accept</code></h3>
<figure>
</figure>

<h3 id="tcp-连接读数据-nettcpconnread">TCP 连接读数据: <code>net.(*TCPConn).Read</code></h3>
<figure>
</figure>

<h3 id="tcp-连接写数据-nettcpconnwrite">TCP 连接写数据: <code>net.(*TCPConn).Write</code></h3>
<figure>
</figure>

<h2 id="v-netpoll-执行流程-netpoll">V. netpoll 执行流程: <code>netpoll</code></h2>
<p>在调度和 GC 的关键点上都会检查一次 netpoll，确定是否存在 ready 状态的 FD：</p>
<ul>
<li>
<p><code>startTheWorldWithSema</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Go" data-lang="Go"><span class="line"><span class="cl"><span class="c1">// reason is the same STW reason passed to stopTheWorld. start is the start
</span></span></span><span class="line"><span class="cl"><span class="c1">// time returned by stopTheWorld.
</span></span></span><span class="line"><span class="cl"><span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1">// now is the current time; prefer to pass 0 to capture a fresh timestamp.
</span></span></span><span class="line"><span class="cl"><span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1">// stattTheWorldWithSema returns now.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">func</span> <span class="nf">startTheWorldWithSema</span><span class="p">(</span><span class="nx">now</span> <span class="kt">int64</span><span class="p">,</span> <span class="nx">w</span> <span class="nx">worldStop</span><span class="p">)</span> <span class="kt">int64</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nf">assertWorldStopped</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">mp</span> <span class="o">:=</span> <span class="nf">acquirem</span><span class="p">()</span> <span class="c1">// disable preemption because it can be holding p in a local var
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span> <span class="nf">netpollinited</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">list</span><span class="p">,</span> <span class="nx">delta</span> <span class="o">:=</span> <span class="nf">netpoll</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="c1">// non-blocking
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="nf">injectglist</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">list</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="nf">netpollAdjustWaiters</span><span class="p">(</span><span class="nx">delta</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="nf">lock</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">sched</span><span class="p">.</span><span class="nx">lock</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nx">procs</span> <span class="o">:=</span> <span class="nx">gomaxprocs</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">newprocs</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">procs</span> <span class="p">=</span> <span class="nx">newprocs</span>
</span></span><span class="line"><span class="cl">		<span class="nx">newprocs</span> <span class="p">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="nx">p1</span> <span class="o">:=</span> <span class="nf">procresize</span><span class="p">(</span><span class="nx">procs</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="nx">sched</span><span class="p">.</span><span class="nx">gcwaiting</span><span class="p">.</span><span class="nf">Store</span><span class="p">(</span><span class="kc">false</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">sched</span><span class="p">.</span><span class="nx">sysmonwait</span><span class="p">.</span><span class="nf">Load</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">sched</span><span class="p">.</span><span class="nx">sysmonwait</span><span class="p">.</span><span class="nf">Store</span><span class="p">(</span><span class="kc">false</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="nf">notewakeup</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">sched</span><span class="p">.</span><span class="nx">sysmonnote</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="nf">unlock</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">sched</span><span class="p">.</span><span class="nx">lock</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="nf">worldStarted</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p><code>findrunnable</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Go" data-lang="Go"><span class="line"><span class="cl"><span class="c1">// Finds a runnable goroutine to execute.
</span></span></span><span class="line"><span class="cl"><span class="c1">// Tries to steal from other P&#39;s, get g from local or global queue, poll network.
</span></span></span><span class="line"><span class="cl"><span class="c1">// tryWakeP indicates that the returned goroutine is not normal (GC worker, trace
</span></span></span><span class="line"><span class="cl"><span class="c1">// reader) so the caller should try to wake a P.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">func</span> <span class="nf">findRunnable</span><span class="p">()</span> <span class="p">(</span><span class="nx">gp</span> <span class="o">*</span><span class="nx">g</span><span class="p">,</span> <span class="nx">inheritTime</span><span class="p">,</span> <span class="nx">tryWakeP</span> <span class="kt">bool</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="o">...</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Poll network until next timer.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span> <span class="nf">netpollinited</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="nf">netpollAnyWaiters</span><span class="p">()</span> <span class="o">||</span> <span class="nx">pollUntil</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">sched</span><span class="p">.</span><span class="nx">lastpoll</span><span class="p">.</span><span class="nf">Swap</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">sched</span><span class="p">.</span><span class="nx">pollUntil</span><span class="p">.</span><span class="nf">Store</span><span class="p">(</span><span class="nx">pollUntil</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">mp</span><span class="p">.</span><span class="nx">p</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nf">throw</span><span class="p">(</span><span class="s">&#34;findrunnable: netpoll with p&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">mp</span><span class="p">.</span><span class="nx">spinning</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nf">throw</span><span class="p">(</span><span class="s">&#34;findrunnable: netpoll with spinning&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="nx">delay</span> <span class="o">:=</span> <span class="nb">int64</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">pollUntil</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="nx">now</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nx">now</span> <span class="p">=</span> <span class="nf">nanotime</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">			<span class="nx">delay</span> <span class="p">=</span> <span class="nx">pollUntil</span> <span class="o">-</span> <span class="nx">now</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="nx">delay</span> <span class="p">&lt;</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nx">delay</span> <span class="p">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">faketime</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="c1">// When using fake time, just poll.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="nx">delay</span> <span class="p">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="nx">list</span><span class="p">,</span> <span class="nx">delta</span> <span class="o">:=</span> <span class="nf">netpoll</span><span class="p">(</span><span class="nx">delay</span><span class="p">)</span> <span class="c1">// block until new work is available
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="o">...</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p><code>pollWork</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Go" data-lang="Go"><span class="line"><span class="cl"><span class="c1">// pollWork reports whether there is non-background work this P could
</span></span></span><span class="line"><span class="cl"><span class="c1">// be doing. This is a fairly lightweight check to be used for
</span></span></span><span class="line"><span class="cl"><span class="c1">// background work loops, like idle GC. It checks a subset of the
</span></span></span><span class="line"><span class="cl"><span class="c1">// conditions checked by the actual scheduler.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">func</span> <span class="nf">pollWork</span><span class="p">()</span> <span class="kt">bool</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">sched</span><span class="p">.</span><span class="nx">runqsize</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="nx">p</span> <span class="o">:=</span> <span class="nf">getg</span><span class="p">().</span><span class="nx">m</span><span class="p">.</span><span class="nx">p</span><span class="p">.</span><span class="nf">ptr</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="p">!</span><span class="nf">runqempty</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nf">netpollinited</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="nf">netpollAnyWaiters</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="nx">sched</span><span class="p">.</span><span class="nx">lastpoll</span><span class="p">.</span><span class="nf">Load</span><span class="p">()</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">list</span><span class="p">,</span> <span class="nx">delta</span> <span class="o">:=</span> <span class="nf">netpoll</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="p">!</span><span class="nx">list</span><span class="p">.</span><span class="nf">empty</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nf">injectglist</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">list</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nf">netpollAdjustWaiters</span><span class="p">(</span><span class="nx">delta</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="k">return</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="kc">false</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p><code>sysmon</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Go" data-lang="Go"><span class="line"><span class="cl"><span class="c1">// Always runs without a P, so write barriers are not allowed.
</span></span></span><span class="line"><span class="cl"><span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1">//go:nowritebarrierrec
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">func</span> <span class="nf">sysmon</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="o">...</span>
</span></span><span class="line"><span class="cl">	<span class="nf">lock</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">sched</span><span class="p">.</span><span class="nx">sysmonlock</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// Update now in case we blocked on sysmonnote or spent a long time
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="c1">// blocked on schedlock or sysmonlock above.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">now</span> <span class="p">=</span> <span class="nf">nanotime</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">	<span class="c1">// trigger libc interceptors if needed
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="k">if</span> <span class="o">*</span><span class="nx">cgo_yield</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nf">asmcgocall</span><span class="p">(</span><span class="o">*</span><span class="nx">cgo_yield</span><span class="p">,</span> <span class="kc">nil</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="c1">// poll network if not polled for more than 10ms
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>	<span class="nx">lastpoll</span> <span class="o">:=</span> <span class="nx">sched</span><span class="p">.</span><span class="nx">lastpoll</span><span class="p">.</span><span class="nf">Load</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nf">netpollinited</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="nx">lastpoll</span> <span class="o">!=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">lastpoll</span><span class="o">+</span><span class="mi">10</span><span class="o">*</span><span class="mi">1000</span><span class="o">*</span><span class="mi">1000</span> <span class="p">&lt;</span> <span class="nx">now</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">sched</span><span class="p">.</span><span class="nx">lastpoll</span><span class="p">.</span><span class="nf">CompareAndSwap</span><span class="p">(</span><span class="nx">lastpoll</span><span class="p">,</span> <span class="nx">now</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="nx">list</span><span class="p">,</span> <span class="nx">delta</span> <span class="o">:=</span> <span class="nf">netpoll</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="c1">// non-blocking - returns list of goroutines
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="k">if</span> <span class="p">!</span><span class="nx">list</span><span class="p">.</span><span class="nf">empty</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="c1">// Need to decrement number of idle locked M&#39;s
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="c1">// (pretending that one more is running) before injectglist.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="c1">// Otherwise it can lead to the following situation:
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="c1">// injectglist grabs all P&#39;s but before it starts M&#39;s to run the P&#39;s,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="c1">// another M returns from syscall, finishes running its G,
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="c1">// observes that there is no work to do and no other running M&#39;s
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="c1">// and reports deadlock.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>			<span class="nf">incidlelocked</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nf">injectglist</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">list</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nf">incidlelocked</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nf">netpollAdjustWaiters</span><span class="p">(</span><span class="nx">delta</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
<p>根据 ready 的事件时 Read 或 Write，分别从 poolDesc 的 rg、wg 上获取该唤醒的 goroutine.
然后将已经 ready 的 goroutine push 到 toRun 链表，并且 toRun 链表最终会从 <code>netpoll()</code> 返回，通过 <code>injectglist</code> 进入全局队列.</p>
<blockquote>
<p>相当于每次调度循环都要执行 netpoll，检查频率还是比较高的</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Go" data-lang="Go"><span class="line"><span class="cl"><span class="c1">// netpoll checks for ready network connections.
</span></span></span><span class="line"><span class="cl"><span class="c1">// Returns list of goroutines that become runnable.
</span></span></span><span class="line"><span class="cl"><span class="c1">// delay &lt; 0: blocks indefinitely
</span></span></span><span class="line"><span class="cl"><span class="c1">// delay == 0: does not block, just polls
</span></span></span><span class="line"><span class="cl"><span class="c1">// delay &gt; 0: block for up to that many nanoseconds
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">func</span> <span class="nf">netpoll</span><span class="p">(</span><span class="nx">delay</span> <span class="kt">int64</span><span class="p">)</span> <span class="p">(</span><span class="nx">gList</span><span class="p">,</span> <span class="kt">int32</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">epfd</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">return</span> <span class="nx">gList</span><span class="p">{},</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">waitms</span> <span class="kt">int32</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">delay</span> <span class="p">&lt;</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">waitms</span> <span class="p">=</span> <span class="o">-</span><span class="mi">1</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">delay</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">waitms</span> <span class="p">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">delay</span> <span class="p">&lt;</span> <span class="mf">1e6</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">waitms</span> <span class="p">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="nx">delay</span> <span class="p">&lt;</span> <span class="mf">1e15</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">waitms</span> <span class="p">=</span> <span class="nb">int32</span><span class="p">(</span><span class="nx">delay</span> <span class="o">/</span> <span class="mf">1e6</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="c1">// An arbitrary cap on how long to wait for a timer.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// 1e9 ms == ~11.5 days.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="nx">waitms</span> <span class="p">=</span> <span class="mf">1e9</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">events</span> <span class="p">[</span><span class="mi">128</span><span class="p">]</span><span class="nx">syscall</span><span class="p">.</span><span class="nx">EpollEvent</span>
</span></span><span class="line"><span class="cl"><span class="nx">retry</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">	<span class="nx">n</span><span class="p">,</span> <span class="nx">errno</span> <span class="o">:=</span> <span class="nx">syscall</span><span class="p">.</span><span class="nf">EpollWait</span><span class="p">(</span><span class="nx">epfd</span><span class="p">,</span> <span class="nx">events</span><span class="p">[:],</span> <span class="nb">int32</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="nx">events</span><span class="p">)),</span> <span class="nx">waitms</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">errno</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">errno</span> <span class="o">!=</span> <span class="nx">_EINTR</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nb">println</span><span class="p">(</span><span class="s">&#34;runtime: epollwait on fd&#34;</span><span class="p">,</span> <span class="nx">epfd</span><span class="p">,</span> <span class="s">&#34;failed with&#34;</span><span class="p">,</span> <span class="nx">errno</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="nf">throw</span><span class="p">(</span><span class="s">&#34;runtime: netpoll failed&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="c1">// If a timed sleep was interrupted, just return to
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="c1">// recalculate how long we should sleep now.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>		<span class="k">if</span> <span class="nx">waitms</span> <span class="p">&gt;</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="k">return</span> <span class="nx">gList</span><span class="p">{},</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="k">goto</span> <span class="nx">retry</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">toRun</span> <span class="nx">gList</span>
</span></span><span class="line"><span class="cl">	<span class="nx">delta</span> <span class="o">:=</span> <span class="nb">int32</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="nb">int32</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">n</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">ev</span> <span class="o">:=</span> <span class="nx">events</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">Events</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="k">continue</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="o">*</span><span class="p">(</span><span class="o">**</span><span class="kt">uintptr</span><span class="p">)(</span><span class="nx">unsafe</span><span class="p">.</span><span class="nf">Pointer</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ev</span><span class="p">.</span><span class="nx">Data</span><span class="p">))</span> <span class="o">==</span> <span class="o">&amp;</span><span class="nx">netpollBreakRd</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">Events</span> <span class="o">!=</span> <span class="nx">syscall</span><span class="p">.</span><span class="nx">EPOLLIN</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nb">println</span><span class="p">(</span><span class="s">&#34;runtime: netpoll: break fd ready for&#34;</span><span class="p">,</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">Events</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">				<span class="nf">throw</span><span class="p">(</span><span class="s">&#34;runtime: netpoll: break fd ready for something unexpected&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="nx">delay</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="c1">// netpollBreak could be picked up by a
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>				<span class="c1">// nonblocking poll. Only read the byte
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>				<span class="c1">// if blocking.
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>				<span class="kd">var</span> <span class="nx">tmp</span> <span class="p">[</span><span class="mi">16</span><span class="p">]</span><span class="kt">byte</span>
</span></span><span class="line"><span class="cl">				<span class="nf">read</span><span class="p">(</span><span class="nb">int32</span><span class="p">(</span><span class="nx">netpollBreakRd</span><span class="p">),</span> <span class="nf">noescape</span><span class="p">(</span><span class="nx">unsafe</span><span class="p">.</span><span class="nf">Pointer</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">tmp</span><span class="p">[</span><span class="mi">0</span><span class="p">])),</span> <span class="nb">int32</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="nx">tmp</span><span class="p">)))</span>
</span></span><span class="line"><span class="cl">				<span class="nx">netpollWakeSig</span><span class="p">.</span><span class="nf">Store</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">			<span class="k">continue</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		<span class="kd">var</span> <span class="nx">mode</span> <span class="kt">int32</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">Events</span><span class="o">&amp;</span><span class="p">(</span><span class="nx">syscall</span><span class="p">.</span><span class="nx">EPOLLIN</span><span class="p">|</span><span class="nx">syscall</span><span class="p">.</span><span class="nx">EPOLLRDHUP</span><span class="p">|</span><span class="nx">syscall</span><span class="p">.</span><span class="nx">EPOLLHUP</span><span class="p">|</span><span class="nx">syscall</span><span class="p">.</span><span class="nx">EPOLLERR</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">mode</span> <span class="o">+=</span> <span class="sc">&#39;r&#39;</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">ev</span><span class="p">.</span><span class="nx">Events</span><span class="o">&amp;</span><span class="p">(</span><span class="nx">syscall</span><span class="p">.</span><span class="nx">EPOLLOUT</span><span class="p">|</span><span class="nx">syscall</span><span class="p">.</span><span class="nx">EPOLLHUP</span><span class="p">|</span><span class="nx">syscall</span><span class="p">.</span><span class="nx">EPOLLERR</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">mode</span> <span class="o">+=</span> <span class="sc">&#39;w&#39;</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="k">if</span> <span class="nx">mode</span> <span class="o">!=</span> <span class="mi">0</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">			<span class="nx">tp</span> <span class="o">:=</span> <span class="o">*</span><span class="p">(</span><span class="o">*</span><span class="nx">taggedPointer</span><span class="p">)(</span><span class="nx">unsafe</span><span class="p">.</span><span class="nf">Pointer</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ev</span><span class="p">.</span><span class="nx">Data</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">			<span class="nx">pd</span> <span class="o">:=</span> <span class="p">(</span><span class="o">*</span><span class="nx">pollDesc</span><span class="p">)(</span><span class="nx">tp</span><span class="p">.</span><span class="nf">pointer</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">			<span class="nx">tag</span> <span class="o">:=</span> <span class="nx">tp</span><span class="p">.</span><span class="nf">tag</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">			<span class="k">if</span> <span class="nx">pd</span><span class="p">.</span><span class="nx">fdseq</span><span class="p">.</span><span class="nf">Load</span><span class="p">()</span> <span class="o">==</span> <span class="nx">tag</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">				<span class="nx">pd</span><span class="p">.</span><span class="nf">setEventErr</span><span class="p">(</span><span class="nx">ev</span><span class="p">.</span><span class="nx">Events</span> <span class="o">==</span> <span class="nx">syscall</span><span class="p">.</span><span class="nx">EPOLLERR</span><span class="p">,</span> <span class="nx">tag</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">				<span class="nx">delta</span> <span class="o">+=</span> <span class="nf">netpollready</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">toRun</span><span class="p">,</span> <span class="nx">pd</span><span class="p">,</span> <span class="nx">mode</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">			<span class="p">}</span>
</span></span><span class="line"><span class="cl">		<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="nx">toRun</span><span class="p">,</span> <span class="nx">delta</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// netpollready is called by the platform-specific netpoll function.
</span></span></span><span class="line"><span class="cl"><span class="c1">// It declares that the fd associated with pd is ready for I/O.
</span></span></span><span class="line"><span class="cl"><span class="c1">// The toRun argument is used to build a list of goroutines to return
</span></span></span><span class="line"><span class="cl"><span class="c1">// from netpoll. The mode argument is &#39;r&#39;, &#39;w&#39;, or &#39;r&#39;+&#39;w&#39; to indicate
</span></span></span><span class="line"><span class="cl"><span class="c1">// whether the fd is ready for reading or writing or both.
</span></span></span><span class="line"><span class="cl"><span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1">// This returns a delta to apply to netpollWaiters.
</span></span></span><span class="line"><span class="cl"><span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1">// This may run while the world is stopped, so write barriers are not allowed.
</span></span></span><span class="line"><span class="cl"><span class="c1">//
</span></span></span><span class="line"><span class="cl"><span class="c1">//go:nowritebarrier
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kd">func</span> <span class="nf">netpollready</span><span class="p">(</span><span class="nx">toRun</span> <span class="o">*</span><span class="nx">gList</span><span class="p">,</span> <span class="nx">pd</span> <span class="o">*</span><span class="nx">pollDesc</span><span class="p">,</span> <span class="nx">mode</span> <span class="kt">int32</span><span class="p">)</span> <span class="kt">int32</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="nx">delta</span> <span class="o">:=</span> <span class="nb">int32</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="kd">var</span> <span class="nx">rg</span><span class="p">,</span> <span class="nx">wg</span> <span class="o">*</span><span class="nx">g</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">mode</span> <span class="o">==</span> <span class="sc">&#39;r&#39;</span> <span class="o">||</span> <span class="nx">mode</span> <span class="o">==</span> <span class="sc">&#39;r&#39;</span><span class="o">+</span><span class="sc">&#39;w&#39;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">rg</span> <span class="p">=</span> <span class="nf">netpollunblock</span><span class="p">(</span><span class="nx">pd</span><span class="p">,</span> <span class="sc">&#39;r&#39;</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">delta</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">mode</span> <span class="o">==</span> <span class="sc">&#39;w&#39;</span> <span class="o">||</span> <span class="nx">mode</span> <span class="o">==</span> <span class="sc">&#39;r&#39;</span><span class="o">+</span><span class="sc">&#39;w&#39;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">wg</span> <span class="p">=</span> <span class="nf">netpollunblock</span><span class="p">(</span><span class="nx">pd</span><span class="p">,</span> <span class="sc">&#39;w&#39;</span><span class="p">,</span> <span class="kc">true</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">delta</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">rg</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">toRun</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nx">rg</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span> <span class="nx">wg</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">toRun</span><span class="p">.</span><span class="nf">push</span><span class="p">(</span><span class="nx">wg</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl">	<span class="k">return</span> <span class="nx">delta</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="vi-总结">VI. 总结</h2>
<ol>
<li>
<p>Golang 通过对 Linux 内核提供的 <code>epoll</code> 实现进行封装，实现了<strong>同步编程异步执行</strong>的效果，其核心数据结构是 <code>netFD</code>，并将 <code>Sysfd</code> 与 <code>pollDesc</code> 结构绑定。
当某个 <code>netFD</code> 产生 <code>EAGAIN</code> 错误时，则当前 Goroutine 将会被存储到其对应的 <code>pollDesc</code> 中，同时 Goroutine 会 <code>gopark()</code>，直至这个 <code>netFD</code> 再次发生读写事件，会将此 Goroutine 设置为 ready 并放入 <code>toRun</code> 队列等待重新运行，而底层事件通知机制就是 epoll.</p>
</li>
<li>
<p>Golang 中 netpoll 的创建与初始化的可能来源：Timer、读文件、TCP Listen.</p>
</li>
<li>
<p>如下的调度和 GC 关键函数 <code>startTheWorldWithSema</code>、<code>findrunnable</code>、<code>pollWork</code>、<code>sysmon</code> 都会进行 <code>netpoll</code> 执行流程，检查是否存在 ready 状态的 FD.</p>
</li>
</ol>
<h2 id="vii-reference">VII. Reference</h2>
<ul>
<li><a href="https://github.com/golang/go/blob/release-branch.go1.22/src/runtime/netpoll.go" target="_blank" rel="noopener noreffer ">runtime/netpoll.go</a></li>
<li><a href="https://github.com/golang/go/blob/release-branch.go1.22/src/runtime/netpoll_epoll.go" target="_blank" rel="noopener noreffer ">runtime/netpoll_epoll.go</a></li>
<li><a href="https://github.com/golang/go/blob/release-branch.go1.10/src/runtime/proc.go" target="_blank" rel="noopener noreffer ">runtime/proc.go</a></li>
<li><a href="https://github.com/golang/go/blob/release-branch.go1.10/src/net/fd_unix.go" target="_blank" rel="noopener noreffer ">net/fd_unix.go</a></li>
<li><a href="https://github.com/golang/go/blob/release-branch.go1.10/src/internal/poll/fd_poll_runtime.go" target="_blank" rel="noopener noreffer ">internal/poll/fd_poll_runtime.go</a></li>
<li><a href="https://github.com/golang/go/blob/release-branch.go1.10/src/internal/poll/fd_unix.go" target="_blank" rel="noopener noreffer ">internal/poll/fd_unix.go</a></li>
</ul>]]></description>
</item>
<item>
    <title>Arch Linux 指南</title>
    <link>https://kydance.github.io/posts/arch-linux/</link>
    <pubDate>Wed, 17 Apr 2024 22:11:33 &#43;0800</pubDate>
    <author>kyden</author>
    <guid>https://kydance.github.io/posts/arch-linux/</guid>
    <description><![CDATA[<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>导语<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">详细介绍日常使用 Arch Linux 的各种问题与解决方案，包括 Arch 安装、常用软件推荐、系统优化等.</div>
        </div>
    </div>
<h2 id="i-install-arch">I. Install Arch</h2>
<h3 id="1-download-arch-linux-iso">1. Download Arch Linux ISO</h3>
<p><a href="https://archlinux.org/download/" target="_blank" rel="noopener noreffer ">archlinux-x86_64.iso</a></p>
<h3 id="2-u-盘-ventoy-准备">2. U 盘 ventoy 准备</h3>
<p>ventory 过程：略</p>
<p>选择 <code>Arch Linux install medium (x86_64, UEFI)</code> 启动安装环境</p>
<p>进入 <code>root@archiso</code> 后，需要设置互联网，推荐使用网线连接</p>
<p>检查网络接口是否已经启用</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ip link
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># ...</span>
</span></span><span class="line"><span class="cl">2: enp0s3: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="m">1500</span> ...
</span></span><span class="line"><span class="cl"><span class="c1"># ...</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>尖括号内的“UP”，表示接口已经启用，否则使用以下命令：<code>ip link set enp0s3 up</code></li>
<li>请使用 ping 命令测试网络: <code>ping www.baidu.com</code></li>
</ul>
<h3 id="3-更新系统时钟">3. 更新系统时钟</h3>
<p>在互联网连接之后，systemd-timesyncd 服务将自动校准系统时间，便于安装软件包时验证签名</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ timedatectl
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="4-分区设置">4. 分区设置</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ mkfs.ext4 /dev/nvme1n1p7 <span class="c1">#用作根分区，挂载到 /</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># mkfs.fat -F32 /dev/nvme1n1p3 #用作EFI分区 ，挂载到 /boot/efi</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 如果安装Windows时已经有个EFI分区，就把上面的 /dev/nvme1n1p3 换成已有的EFI分区</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ mkfs.ext4 /dev/nvme1n1p8 <span class="c1"># 挂载到 /home 目录</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># mount</span>
</span></span><span class="line"><span class="cl">$ mount /dev/nvme1n1p7 /mnt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ mkdir -p /mnt/boot/efi
</span></span><span class="line"><span class="cl">$ mount /dev/nvme1n1p1 /mnt/boot/efi
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ mount --mkdir /dev/nvme1n1p8 /mnt/home
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="5-选择软件镜像仓库">5. 选择软件镜像仓库</h3>
<p>手动修改 <code>/etc/pacman.d/mirrorlist</code>，添加相关镜像</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ vim /etc/pacman.d/mirrorlist
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">Server</span> <span class="o">=</span> https://mirrors.ustc.edu.cn/archlinux/<span class="nv">$repo</span>/os/<span class="nv">$arch</span>
</span></span><span class="line"><span class="cl"><span class="nv">Server</span> <span class="o">=</span> https://mirrors.tuna.tsinghua.edu.cn/archlinux/<span class="nv">$repo</span>/os/<span class="nv">$arch</span>
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ pacman -Sy archlinuxcn-keyring
</span></span><span class="line"><span class="cl">$ pacman -Syyu
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="6-安装基础包">6. 安装基础包</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ pacstrap /mnt bash base base-devel linux linux-headers linux-firmware neovim xsel
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># fstab</span>
</span></span><span class="line"><span class="cl">$ genfstab -U -p /mnt &gt;&gt; /mnt/etc/fstab
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="7-chroot---设置系统属性">7. chroot -&gt; 设置系统属性</h3>
<h4 id="切换系统">切换系统</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ arch-chroot /mnt
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="设置时区">设置时区</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
</span></span><span class="line"><span class="cl">$ hwclock --systohc
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="修改-hostname">修改 <code>hostname</code></h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ vim /etc/hostname
</span></span><span class="line"><span class="cl">arch
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="设置-locale">设置 locale</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ vim /etc/locale.conf
</span></span><span class="line"><span class="cl"><span class="sb">`</span>LANG_en_US.UTF-8<span class="sb">`</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ vim /etc/locale.gen
</span></span><span class="line"><span class="cl">en_US.UTF-8 UTF-8   <span class="c1"># 取消注释</span>
</span></span><span class="line"><span class="cl">zh_CN.UTF-8 UTF-8   <span class="c1"># 取消注释</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ locale-gen
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="网络管理器蓝牙">网络管理器，蓝牙</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ pacman -S networkmanager bluez bluez-utils pulseaudio-bluetooth alsa-utils pulseaudio pulseaudio-alsa sof-firmware
</span></span><span class="line"><span class="cl">$ systemctl <span class="nb">enable</span> NetworkManager.service
</span></span><span class="line"><span class="cl">$ systemctl <span class="nb">enable</span> bluetooth.service
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="设置-password">设置 password</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ passwd
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="引导相关">引导相关</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># ucode</span>
</span></span><span class="line"><span class="cl">$ cat /proc/cpuinfo <span class="p">|</span> grep <span class="s2">&#34;model name&#34;</span>
</span></span><span class="line"><span class="cl">$ pacman -S intel-ucode <span class="c1"># amd-ucode</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 安装引导加载程序</span>
</span></span><span class="line"><span class="cl">$ pacman -S grub efibootmgr os-prober
</span></span><span class="line"><span class="cl">$ grub-install --target<span class="o">=</span>x86_64-efi --efi-directory<span class="o">=</span>/boot/efi --bootloader-id<span class="o">=</span>GRUB
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 配置 os-prober</span>
</span></span><span class="line"><span class="cl">$ vim /etc/default/grub
</span></span><span class="line"><span class="cl"><span class="nv">GRUB_DISABLE_OS_PROBER</span><span class="o">=</span><span class="nb">false</span> <span class="c1"># 取消注释</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ grub-mkconfig -o /boot/grub/grub.cfg
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="create-user-and-usergroup">Create user and usergroup</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ useradd -m -G wheel kyden
</span></span><span class="line"><span class="cl"><span class="c1"># 为新用户 kyden 设置 passwd</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 修改权限</span>
</span></span><span class="line"><span class="cl">$ pacman -S sudo man-pages man-db
</span></span><span class="line"><span class="cl">$ vim /etc/sudoers
</span></span><span class="line"><span class="cl">%wheel <span class="nv">ALL</span><span class="o">=(</span>ALL:ALL<span class="o">)</span> ALL <span class="c1"># 取消注释</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 切换至 kyden 用户</span>
</span></span><span class="line"><span class="cl">$ su - kyden
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="桌面程序---kde">桌面程序 - KDE</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># KDE</span>
</span></span><span class="line"><span class="cl">$ sudo pacman -S plasma xorg nvidia dolphin konsole fish noto-fonts-cjk noto-fonts-emoji
</span></span><span class="line"><span class="cl">$ sudo systemctl <span class="nb">enable</span> sddm
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># reboot</span>
</span></span><span class="line"><span class="cl">$ <span class="nb">exit</span>
</span></span><span class="line"><span class="cl">$ swapoff /mnt/swapfile
</span></span><span class="line"><span class="cl">$ umount -R /mnt
</span></span><span class="line"><span class="cl">$ reboot
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h2 id="ii-software">II. Software</h2>
<h3 id="networkmanager">NetworkManager</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ ping baidu.com
</span></span><span class="line"><span class="cl">$ systemctl <span class="nb">enable</span> NetworkManager
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h3 id="pacman-镜像修改">pacman 镜像修改</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo vim /etc/pacman.conf
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Misc options</span>
</span></span><span class="line"><span class="cl">Color
</span></span><span class="line"><span class="cl"><span class="nv">ParallelDownloads</span> <span class="o">=</span> <span class="m">5</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="o">[</span>multilib<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="nv">Include</span> <span class="o">=</span> /etc/pacman.d/mirrorlist
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 键入：</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>archlinuxcn<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="nv">Server</span> <span class="o">=</span> https://mirrors.utsc.edu.cn/archlinuxcn/<span class="nv">$arch</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ sudo pacman -Syyu
</span></span><span class="line"><span class="cl">$ sudo pacman -S archlinuxcn-keyring
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h3 id="常见通用软件">常见通用软件</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ yay -S fish
</span></span><span class="line"><span class="cl"><span class="c1"># curl -L https://get.oh-my.fish | fish</span>
</span></span><span class="line"><span class="cl">$ fish_config
</span></span><span class="line"><span class="cl"><span class="c1"># 取消问候语</span>
</span></span><span class="line"><span class="cl">$ <span class="nb">set</span> -U fish_greeting <span class="s2">&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ sudo vim /etc/systemd/system/clash.service
</span></span><span class="line"><span class="cl">$ sudo systemctl daemon-reload
</span></span><span class="line"><span class="cl">$ sudo systemctl <span class="nb">enable</span> clash
</span></span><span class="line"><span class="cl">$ sudo systemctl start clash
</span></span><span class="line"><span class="cl">$ sudo systemctl status clash
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ sudo pacman -S obs-studio
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="输入法">输入法</h4>
<p><a href="https://wiki.archlinuxcn.org/wiki/Fcitx5" target="_blank" rel="noopener noreffer ">fcitx5</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S fcitx5 fcitx5-configtool fcitx5-qt fcitx5-gtk fcitx5-chinese-addons fcitx5-material-color fcitx5-pinyin-moegirl fcitx5-pinyin-zhwiki
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ sudo vim /etc/environment
</span></span><span class="line"><span class="cl"><span class="nv">GTK_IM_MODULE</span><span class="o">=</span>fcitx
</span></span><span class="line"><span class="cl"><span class="nv">QT_IM_MODULE</span><span class="o">=</span>fcitx
</span></span><span class="line"><span class="cl"><span class="nv">XMODIFIERS</span><span class="o">=</span><span class="se">\@</span><span class="nv">im</span><span class="o">=</span>fcitx
</span></span><span class="line"><span class="cl"><span class="c1"># 为了让一些使用特定版本 SDL2 库的游戏能正常使用输入法</span>
</span></span><span class="line"><span class="cl"><span class="nv">SDL_IM_MODULE</span><span class="o">=</span>fcitx
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ yay -S clash-verge-rev-bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ yay -Sy neofetch google-chrome obs-studio baidunetdisk <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    nutstore-experimental xunlei-bin telegram-desktop <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    gitkraken visual-studio-code-bin typora-free redis <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    net-tools pot-translation translate-shell okular <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    snipaste gwenview kcalc wemeet-bin vlc wget ark <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    shotcut inkscape ninja gnu-netcat tcpdump cmake <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    clang tree python-pip caj2pdf-qt ttf-hack-nerd <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    transmission-gtk gpick speedcrunch drawio-desktop <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    zeal electronic-wechat-uos-bin <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    linuxqq lx-music-desktop
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><strong>gpick</strong>: 可以从桌面任何地方取色，并且它还提供一些其它的高级特性</li>
<li><strong>SpeedCrunch</strong>: 一个漂亮，开源，高精度的科学计算器</li>
<li><strong>Snipaste</strong>: 截图工具，如不可用可选用<code>spectacle</code></li>
<li><strong>drawio-desktop</strong>: <a href="https://github.com/jgraph/drawio-desktop" target="_blank" rel="noopener noreffer ">Security-first diagramming for teams</a></li>
<li><strong>zeal</strong>：离线文档浏览器</li>
</ul>
<hr>
<h4 id="trans-shell">trans-shell</h4>
<p>基础用法</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 翻译到locale语言</span>
</span></span><span class="line"><span class="cl">$ trans <span class="o">[</span>Words<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 翻译到指定语言</span>
</span></span><span class="line"><span class="cl">$ trans :zh <span class="o">[</span>word<span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 翻译到多种目标语言</span>
</span></span><span class="line"><span class="cl">$ trans :zh+ja word
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 翻译句子和短语</span>
</span></span><span class="line"><span class="cl">$ trans en:zh <span class="s2">&#34;word processor&#34;</span>
</span></span><span class="line"><span class="cl">$ trans :zh <span class="s2">&#34;To-morrow, and to-morrow, and to-morrow,&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 简洁模式：默认情况下，Translate Shell 尽可能多的显示翻译信息。如果你希望只显示简要信息，只需要加上 -b选项。</span>
</span></span><span class="line"><span class="cl">$ trans -b :zh <span class="s2">&#34;Saluton, Mondo&#34;</span>
</span></span><span class="line"><span class="cl">$ trans -b :@ja <span class="s2">&#34;Saluton, Mondo&#34;</span> <span class="c1">#显示发音符号，如果有的话，如日语罗马音，汉语拼音</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 翻译文件或网页</span>
</span></span><span class="line"><span class="cl">$ trans :zh file://&lt;input.txt&gt;
</span></span><span class="line"><span class="cl">$ trans :zh //https://github.com/kydance/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 进入交互模式</span>
</span></span><span class="line"><span class="cl">$ trans -shell
</span></span><span class="line"><span class="cl">$ trans -shell en:fr
</span></span></code></pre></td></tr></table>
</div>
</div><p>Alais</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">tsbz <span class="s1">&#39;trans -b :zh&#39;</span>
</span></span><span class="line"><span class="cl">tsz <span class="s1">&#39;trans :zh&#39;</span>
</span></span><span class="line"><span class="cl">tsbe <span class="s1">&#39;trans -b :en&#39;</span>
</span></span><span class="line"><span class="cl">tse <span class="s1">&#39;trans :en&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h4 id="office">office</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ yay -S wps-office wps-office-mui-zh-cn ttf-wps-fonts
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h3 id="远程工具---remminahttpsremminaorg">远程工具 - <a href="https://remmina.org/" target="_blank" rel="noopener noreffer ">Remmina</a></h3>
<ul>
<li>
<p><code>$ yay -S remmina freerdp</code></p>
</li>
<li>
<p><a href="https://www.bilibili.com/video/BV1x64y1X7FT" target="_blank" rel="noopener noreffer ">使用教程</a></p>
<p>安装 <code>freerdp</code> 插件后，可以走 RDP 协议远程 Win10（<strong>Win10 不需要其他任何设置</strong>）</p>
</li>
</ul>
<hr>
<h3 id="git">Git</h3>
<h4 id="配置-git">配置 git</h4>
<ol>
<li>
<p>设置<code>user.name</code>和<code>user.emal</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git config --global user.name <span class="s2">&#34;kyden&#34;</span>
</span></span><span class="line"><span class="cl">$ git config --global user.email xxxxxx@gmail.com
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Verify</span>
</span></span><span class="line"><span class="cl">$ git config --list
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>生成密钥</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 要求多次输入密码，可不要输入密码</span>
</span></span><span class="line"><span class="cl">$ ssh-keygen -t rsa -C <span class="s1">&#39;xxxxxx@gmail.com&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>GitHub 配置 SSH Keys</p>
<ul>
<li>打开生成的 <code>Key</code> 文件 <code>~/.ssh/id_rsa.pub</code>: <code>cat ~/.ssh/id_rsa.pub</code></li>
<li>复制全部内容，在 Key 中粘贴</li>
</ul>
</li>
</ol>
<hr>
<h4 id="git-常用命令">Git 常用命令</h4>
<ul>
<li><code>git status</code></li>
<li><code>git clone</code></li>
<li><code>git pull</code></li>
<li><code>git push</code></li>
<li><code>git commit -m 'commits'</code> or <code>git commit -m 'commits' kyden.go</code></li>
<li><code>git add .</code> or <code>git kyden.go</code></li>
<li><code>git reflog</code></li>
</ul>
<hr>
<h4 id="git实现从本地添加项目到远程仓库">Git实现从本地添加项目到远程仓库</h4>
<p>Steps:</p>
<ol>
<li>
<p><strong>GitHub</strong> 上创建一个新的远程仓库 - <code>Create a new repo</code> -&gt; <code>Create repository</code></p>
</li>
<li>
<p>本地仓库：创建并初始化 -&gt; 添加待上传到远程仓库的项目文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git init
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>远程仓库和本地仓库关联</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git remote add origin git@github.com:kydance/&lt;repository name&gt;
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>项目文件添加、提交、推送</p>
<ul>
<li>由于远程库是空的，我们第一次 <code>push</code> master 分支时，加上了 <code>-u</code> 参数，Git 不但会把本地的 master 分支内容推送的远程新的 master 分支，还会把本地的 master 分支和远程的 master 分支关联起来</li>
<li><strong>在以后的 <code>push</code> 或者 <code>pull</code> 时就可以简化命令</strong></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add file
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s1">&#39;&lt;commit statements&gt;&#39;</span> file
</span></span><span class="line"><span class="cl">$ git push -u origin master
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ol>
<hr>
<h3 id="golang">Golang</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Download and install go</span>
</span></span><span class="line"><span class="cl">$ sudo pacman -S go
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ vim .config/fish/config.sh
</span></span><span class="line"><span class="cl"><span class="c1"># Set environment variable in `.config/fish/config.sh` or `/etc/profile` or `~/.profile`</span>
</span></span><span class="line"><span class="cl">GOROOT /usr/lib/go
</span></span><span class="line"><span class="cl">GOPATH /home/kyden/goProj
</span></span><span class="line"><span class="cl">GOBIN /home/kyden/goProj/bin
</span></span><span class="line"><span class="cl">PATH <span class="nv">$GOPATH</span>/bin <span class="nv">$GOROOT</span>/bin <span class="nv">$GOBIN</span> <span class="nv">$PATH</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><strong><code>GOROOT</code>，设置 Golang 的安装位置</strong></li>
<li><strong><code>GOBIN</code>，执行 <code>go install</code> 后生成可执行文件的目录</strong></li>
<li><strong><code>GOPATH</code>，工作目录，一般设置到用户目录下</strong></li>
</ul>
<hr>
<h3 id="mysql">MySQL</h3>
<p>很多 Linux 发行版都放弃了对 MySQL 的支持（原因自行 Google）转而支持 mariadb（MySQL的另一个分支），Arch Linux就是其中之一，mariadb 具有和 MySQL 一模一样的操作命令，所以完全不用考虑迁移兼容的问题</p>
<ul>
<li>
<p>安装mariadb:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -Sy mariadb
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>配置 mariadb 命令，创建数据库都在 <code>/var/lib/mysql/</code> 目录下面:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo mysql_install_db --user<span class="o">=</span>mysql --basedir<span class="o">=</span>/usr --datadir<span class="o">=</span>/var/lib/mysql
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>开启mariadb 服务:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ systemctl start mariadb
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>初始化密码，期间有让你设置密码的选项，设置你自己的密码就行了，然后根据自己需要 y/n 就可，因为很多后面可以再修改:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo /usr/bin/mysql_secure_installation
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>登录mariadb 和mysql命令是一样的:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ mysql -u root -p
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>设置开机自启动服务:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ systemctl <span class="nb">enable</span> mariadb
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
<hr>
<h3 id="挂载其他硬盘分区">挂载其他硬盘分区</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Get UUID and TYPE</span>
</span></span><span class="line"><span class="cl">$ sudo blkid
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># eg:</span>
</span></span><span class="line"><span class="cl"><span class="c1"># /dev/nvme1n1p3: LABEL=&#34;Document&#34; BLOCK_SIZE=&#34;512&#34; UUID=&#34;111915F1111915F1&#34; TYPE=&#34;ntfs&#34; PARTLABEL=&#34;Basic data partition&#34; PARTUUID=&#34;666266ba-233b-11ed-95be-00e04c3656eb&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Write UUID TYPE ...</span>
</span></span><span class="line"><span class="cl">$ sudo vim /etc/fstab
</span></span><span class="line"><span class="cl"><span class="c1"># &lt;device&gt; &lt;dir&gt; &lt;type&gt; &lt;options&gt; &lt;dump&gt; &lt;fsck&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nv">UUID</span><span class="o">=</span>111915F1111915F1 /home/kyden/doc ntfs3 defaults <span class="m">0</span> <span class="m">0</span>
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li><code>&lt;device&gt;</code> 描述要挂载的特定块设备或远程文件系统</li>
<li><code>&lt;dir&gt;</code> 描述挂载目录</li>
<li><code>&lt;type&gt;</code> 文件系统类型</li>
<li><code>&lt;options&gt;</code> 相关的挂载选项</li>
<li><code>&lt;dump&gt;</code> 会被 dump(8) 工具检查。该字段通常设置为 0, 以禁用检查</li>
<li><code>&lt;fsck&gt;</code> 设置引导时文件系统检查的顺序; 对于 root 设备该字段应该设置为 1。对于其它分区该字段应该设置为 2,或设置为 0 以禁用检查</li>
</ul>
<blockquote>
<p><strong>NOTE: TYPE 为 <code>ntfs</code> 时导致启动失败，修改为 <code>ntfs3</code> 后成功挂载</strong></p>
</blockquote>
<h3 id="present-windows">Present Windows</h3>
<p></p>
<hr>
<h3 id="scp-文件上传下载"><code>scp</code>: 文件上传、下载</h3>
<ul>
<li>上传
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ scp ./cifar-10-python.tar.gz kyden@&lt;ip&gt;:/home/kyden/
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>下载
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ scp kyden@&lt;ip&gt;:/var/tmp/a.txt /var
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
<hr>
<h3 id="picgo-picgo-core">picgo <code>picgo-core</code></h3>
<ol>
<li>
<p>Download and Install <strong>PigGo-Core</strong></p>
<p></p>
</li>
<li>
<p>Get <strong>token</strong> with GitHub</p>
<p></p>
</li>
<li>
<p>Configure</p>
<p><strong>NOTE：使用时，将注释删掉，以免产生不必要的麻烦</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="c1">// ~/.picgo/config.json
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;picBed&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;current&#34;</span><span class="p">:</span> <span class="s2">&#34;github&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;github&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;repo&#34;</span><span class="p">:</span> <span class="s2">&#34;&lt;userName&gt;/PicBed&#34;</span><span class="p">,</span> <span class="c1">// 设定仓库名：上文在 GitHub 创建的仓库 `&lt;userName&gt;/PicBed`
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="nt">&#34;branch&#34;</span><span class="p">:</span> <span class="s2">&#34;master&#34;</span><span class="p">,</span> <span class="c1">// 设定分支名：`master`
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="nt">&#34;token&#34;</span><span class="p">:</span> <span class="s2">&#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#34;</span><span class="p">,</span> <span class="c1">// 设定 Token：上文生成的 toke
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="nt">&#34;path&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="c1">// 指定存储路径：为空的话会上传到根目录，也可以指定路径
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="nt">&#34;customUrl&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span> <span class="c1">// 设定自定义域名：可以为空
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;uploader&#34;</span><span class="p">:</span> <span class="s2">&#34;github&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;transformer&#34;</span><span class="p">:</span> <span class="s2">&#34;path&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;picgoPlugins&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;picgo-plugin-github-plus&#34;</span><span class="p">:</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ol>
<hr>
<h3 id="cuda--cudnn">CUDA &amp; cuDNN</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ yay -S cuda-11.7 cudnn8-cuda11.0
</span></span></code></pre></td></tr></table>
</div>
</div><p>Arch Linux 会将 CUDA 相关档案安装至 <code>/opt/cuda</code>，有需要的话可以将 CUDA 的 <code>PATH</code> 加到 <code>~/bashrc</code>，此路径永远指向最新版CUDA</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># ~/.fish_config</span>
</span></span><span class="line"><span class="cl"><span class="nb">set</span> PATH /opt/cuda-11.7/bin <span class="nv">$PATH</span>
</span></span><span class="line"><span class="cl"><span class="nb">set</span> LD_LIBRARY_PATH /opt/cuda-11.7/lib64/ <span class="nv">$PATH</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">pip install <span class="nv">torch</span><span class="o">==</span>1.13.1+cu117 <span class="nv">torchvision</span><span class="o">==</span>0.14.1+cu117 <span class="nv">torchaudio</span><span class="o">==</span>0.13.1 --extra-index-url https://download.pytorch.org/whl/cu117
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h3 id="clash-verge">Clash Verge</h3>
<h4 id="dns-泄露问题">DNS 泄露问题</h4>
<p>DNS 泄露其实并没有一个明确的定义，也不存在一个官方解释。</p>
<p>大概就是说你访问YouTube等黑名单网站的时候，使用中国大陆的DNS服务器进行了解析，这可能导致隐私问题的。</p>
<p>如果在 <a href="https://browserleaks.com/dns" target="_blank" rel="noopener noreffer ">DNS Leak Test</a> 、<a href="https://ipleak.net/" target="_blank" rel="noopener noreffer ">ipleak</a>这种网站的列表中看到了中国国旗，就要意识到可能发生了DNS泄露。
虽然没有人知道具体的探测机制是什么，但很可能是从网络层面获取的。在一般的家庭网络拓扑中，wireshark可以看到什么内容，运营商就能看见什么内容，所以你使用114.114.114.114、223.5.5.5这样的DNS解析去访问了什么网站是很清晰的。</p>
<p><strong>Clash开启TUN模式，关闭系统代理去使用</strong>：与普通的系统代理模式区别在于，TUN模式下Clash会创建一张虚拟网卡，从网络层面接管所有的网络流量。</p>
<ul>
<li>
<p>开启TUN模式</p>
</li>
<li>
<p>使用稳定的DNS</p>
<p>DNS这部分有人会教使用运营商的DNS，<strong>运营商的DNS只适合小白用户，因为他可能连反诈</strong>，所以建议使用国内大厂的。</p>
<ol>
<li>
<p>[Optional] 关闭浏览器的QUIC, 中国大陆的isp是限速udp的, 所以导致QUIC这个优秀的协议, 到了中国大陆的网络下成了个负面增益效果。</p>
<p><code>about://flags/#enable-quic</code> 设置为<code>Disabled</code> (点下方弹出的重启浏览器生效)</p>
 
</li>
<li>
<p>关闭浏览器中的“安全DNS”</p>
<p><code>chrome://settings/security</code></p>
 
</li>
<li>
<p>在Clash Verge的【Profiles】中，点右上角的&quot;NEW&quot; -&gt; Type选择&quot;Script&quot; -&gt; Name随意填写(例如，&ldquo;修改DNS&rdquo;)</p>
</li>
<li>
<p>右击新建的文件，然后&quot;Edit File&quot;，输入以下内容后启用：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">main</span><span class="p">(</span><span class="nx">content</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">isObject</span> <span class="o">=</span> <span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">value</span> <span class="o">!==</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> <span class="k">typeof</span> <span class="nx">value</span> <span class="o">===</span> <span class="s1">&#39;object&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">mergeConfig</span> <span class="o">=</span> <span class="p">(</span><span class="nx">existingConfig</span><span class="p">,</span> <span class="nx">newConfig</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">existingConfig</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">existingConfig</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">newConfig</span><span class="p">))</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="nx">existingConfig</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="p">{</span> <span class="p">...</span><span class="nx">existingConfig</span><span class="p">,</span> <span class="p">...</span><span class="nx">newConfig</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">cnDnsList</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;tls://223.5.5.5&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;tls://1.12.12.12&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">trustDnsList</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;https://doh.apad.pro/dns-query&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;https://dns.cooluc.com/dns-query&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;https://1.0.0.1/dns-query&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">notionDns</span> <span class="o">=</span> <span class="s1">&#39;tls://dns.jerryw.cn&#39;</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">notionUrls</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;http-inputs-notion.splunkcloud.com&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;+.notion-static.com&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;+.notion.com&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;+.notion.new&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;+.notion.site&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;+.notion.so&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">combinedUrls</span> <span class="o">=</span> <span class="nx">notionUrls</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">dnsOptions</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;enable&#39;</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;default-nameserver&#39;</span><span class="o">:</span> <span class="nx">cnDnsList</span><span class="p">,</span> <span class="c1">// 用于解析DNS服务器 的域名, 必须为IP, 可为加密DNS
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="s1">&#39;nameserver-policy&#39;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="nx">combinedUrls</span><span class="p">]</span><span class="o">:</span> <span class="nx">notionDns</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;geosite:geolocation-!cn&#39;</span><span class="o">:</span> <span class="nx">trustDnsList</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;nameserver&#39;</span><span class="o">:</span> <span class="nx">trustDnsList</span><span class="p">,</span> <span class="c1">// 默认的域名解析服务器, 如不配置fallback/proxy-server-nameserver, 则所有域名都由nameserver解析
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// GitHub加速前缀
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">githubPrefix</span> <span class="o">=</span> <span class="s1">&#39;https://ghproxy.lainbo.com/&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// GEO数据GitHub资源原始下载地址
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">rawGeoxURLs</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">geoip</span><span class="o">:</span> <span class="s1">&#39;https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">geosite</span><span class="o">:</span> <span class="s1">&#39;https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">mmdb</span><span class="o">:</span> <span class="s1">&#39;https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1">// 生成带有加速前缀的GEO数据资源对象
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="kr">const</span> <span class="nx">accelURLs</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">fromEntries</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="nb">Object</span><span class="p">.</span><span class="nx">entries</span><span class="p">(</span><span class="nx">rawGeoxURLs</span><span class="p">).</span><span class="nx">map</span><span class="p">(([</span><span class="nx">key</span><span class="p">,</span> <span class="nx">githubUrl</span><span class="p">])</span> <span class="p">=&gt;</span> <span class="p">[</span><span class="nx">key</span><span class="p">,</span> <span class="sb">`</span><span class="si">${</span><span class="nx">githubPrefix</span><span class="si">}${</span><span class="nx">githubUrl</span><span class="si">}</span><span class="sb">`</span><span class="p">]),</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kr">const</span> <span class="nx">otherOptions</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;unified-delay&#39;</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;tcp-concurrent&#39;</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;profile&#39;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;store-selected&#39;</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;store-fake-ip&#39;</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;sniffer&#39;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">enable</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nx">sniff</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">TLS</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">ports</span><span class="o">:</span> <span class="p">[</span><span class="mi">443</span><span class="p">,</span> <span class="mi">8443</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="nx">HTTP</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;ports&#39;</span><span class="o">:</span> <span class="p">[</span><span class="mi">80</span><span class="p">,</span> <span class="s1">&#39;8080-8880&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s1">&#39;override-destination&#39;</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;geodata-mode&#39;</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s1">&#39;geox-url&#39;</span><span class="o">:</span> <span class="nx">accelURLs</span><span class="p">,</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="nx">content</span><span class="p">.</span><span class="nx">dns</span> <span class="o">=</span> <span class="nx">mergeConfig</span><span class="p">(</span><span class="nx">content</span><span class="p">.</span><span class="nx">dns</span><span class="p">,</span> <span class="nx">dnsOptions</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">return</span> <span class="p">{</span> <span class="p">...</span><span class="nx">content</span><span class="p">,</span> <span class="p">...</span><span class="nx">otherOptions</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>设置完成后，验证DNS解析结果是否都是来自国外的Cloudflare和Google的DNS, 这时节点服务器不管拿到了你传过去的真ip还是假ip地址, 他都会再去请求一次Cloudflare/Google的DNS服务, 确保解析的正确性。
重要的是<strong>没有中国大陆的DNS服务器</strong>了，如果还是有，那你应该往当前设备的更上层寻找问题所在，比如路由器的设置等。</p>
</li>
</ol>
</li>
</ul>
<h4 id="geoipcn问题">GEOIP，CN问题</h4>
<p>目前市面上绝大多数的代理工具都依赖于 GeoIP2 数据库判断地址所属地。它们的规则结尾部分一般都会有一条类似 <code>GEOIP, CN</code>，用来查询目的 IP 地址是否属于中国大陆，从而判断是否直连。</p>
<p>这些代理工具通常使用的 GeoIP2 数据库是来自于 MaxMind 的 <a href="https://dev.maxmind.com/geoip/geoip2/geolite2/" target="_blank" rel="noopener noreffer ">GeoLite2</a> 免费数据库。这个数据库目前存在一下几个问题：</p>
<ul>
<li>
<p>获取不便：从 2019 年 12 月 30 日起，必须注册后才能下载</p>
</li>
<li>
<p>数据量大：数据库庞大，包含全球的 IP 地址段，约 10 MB</p>
</li>
<li>
<p>准确度低：对中国大陆的 IP 地址判定不准，如：香港阿里云的 IP 被判定为新加坡、中国大陆等。</p>
</li>
</ul>
<p>庞大的数据量对于大多数中国大陆的用户来说是没有意义的，因为只仅需要去判断 IP 的地理位置是否属于中国大陆境内，其他国家的 IP 一律代理/直连。过多的数据量会增加载入时间，降低查询效率。</p>
<p>我们在之前创建的Script中已经包含了下载更精简合适中国大陆的IP数据库链接, 现在只需要手动操作下载和替换即可:</p>
<ol>
<li><strong>Update GeoData</strong>: Clash Verge Rev的<code>设置</code>菜单中点击<code>Update GeoData</code></li>
<li><strong>验证下载</strong>: 打开Clash Verge托盘中的<code>APP Dir</code>，找到<code>geoip.dat</code>文件，验证其大小是否为<strong>几百KB</strong></li>
<li><strong>重启Clash Verge</strong>：确保数据库被正确应用</li>
</ol>
<hr>
<h2 id="iii-内核更换">III. 内核更换</h2>
<ol>
<li>
<p>Install The Desired Kernel</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo pacman -S linux-lts linux-lts-headers
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>Editing GRUB Config File</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo vim /etc/default/grub
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">GRUB_DISABLE_SUBMENU</span><span class="o">=</span>y    <span class="c1"># disables the GRUB submenu, i.e., it enables all the available kernels to be listed on the main GRUB Menu itself instead of the “Advanced option for Arch Linux” option.</span>
</span></span><span class="line"><span class="cl"><span class="nv">GRUB_DEFAULT</span><span class="o">=</span>saved <span class="c1"># saves the last kernel used</span>
</span></span><span class="line"><span class="cl"><span class="nv">GRUB_SAVEDEFAULT</span><span class="o">=</span><span class="nb">true</span> <span class="c1"># makes sure that grub uses the last selected kernel is used as default</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>Re-Generate GRUB Configuration file</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo grub-mkconfig -o /boot/grub/grub.cfg
</span></span></code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>Choose Kernel From GRUB During Boot. 🥂</p>
</li>
</ol>
<hr>
<h2 id="iv-system-optimization">IV. System optimization</h2>
<h3 id="ssd-优化">SSD 优化</h3>
<p><strong>TRIM</strong>, 会帮助清理SSD中的块，从而延长SSD的使用寿命</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ sudo systemctl <span class="nb">enable</span> fstrim.timer
</span></span><span class="line"><span class="cl">$ sudo systemctl start fstrim.timer
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h3 id="swap-设置">SWAP 设置</h3>
<p><a href="https://wiki.archlinux.org/title/Swap#Swappiness" target="_blank" rel="noopener noreffer ">https://wiki.archlinux.org/title/Swap#Swappiness</a></p>
<ul>
<li>查看 swap 使用率，一般是 60 ，意思是 60% 的概率将内存整理到 swap: <code>cat /proc/sys/vm/swappiness</code></li>
<li>修改 swap 使用策略为 10%，即 10% 的概率将内存整理到 swap: <code>sudo sysctl -w vm.swappiness=10</code></li>
<li>修改配置文件：<code>sudo vim /etc/sysctl.d/99-swappiness.conf</code> 在文件末尾加上下面这行内容：<code>vm.swappiness=10</code></li>
<li>重启后可查看 swappiness 的值
</li>
</ul>
<hr>
<h3 id="systemd-journal-size-limit">Systemd journal size limit</h3>
<p>控制日志最大可使用多少磁盘空间，修改<code>/etc/systemd/journald.conf</code> 中的<code>SystemMaxUse</code>参数 <code>SystemMaxUse=50M</code></p>
<hr>
<h2 id="v-problem-and-solution">V. Problem And Solution</h2>
<h3 id="1-clear-command---terminals-database-is-inaccessible">1. <code>clear</code> command - <code>terminals database is inaccessible</code></h3>
<p>解决方案：</p>
<p><a href="https://github.com/ContinuumIO/anaconda-issues/issues/331" target="_blank" rel="noopener noreffer ">Path for Anaconda3 is set in <code>.bashrc</code>. It is interfering with the <code>clear</code> command. Removing Anaconda path from path solved the issue.</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">echo</span> <span class="nv">$CONDA_PREFIX</span>
</span></span><span class="line"><span class="cl">/opt/miniconda
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">$sudo</span> mv <span class="nv">$CONDA_PREFIX</span>/bin/clear <span class="nv">$CONDA_PREFIX</span>/bin/clear_old
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="2-tput-unknown-terminal-xterm-256color">2. <code>tput: unknown terminal &quot;xterm-256color&quot;</code></h3>
<p>解决方案：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ setenv TERMINFO /usr/lib/terminfo
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="3-更新内核后双屏显示时某一个屏幕黑屏但鼠标能够移动过去并显示另一屏幕正常">3. 更新内核后，双屏显示时，某一个屏幕黑屏，但鼠标能够移动过去并显示，另一屏幕正常</h3>
<p>解决方案：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">xrandr --output HDMI-1-0 --right-of eDP1 --auto
</span></span></code></pre></td></tr></table>
</div>
</div><p>命令解释：配置 <code>HDMI-1-0</code> 输出，使其位于 <code>eDP1</code> 输出的右侧，并自动选择最佳的分辨率和刷新率设置</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ xrandr --listmonitors
</span></span><span class="line"><span class="cl">Monitors: <span class="m">2</span>
</span></span><span class="line"><span class="cl">0: +*eDP1 2560/360x1440/200+0+0  eDP1
</span></span><span class="line"><span class="cl">1: +HDMI-1-0 1920/479x1080/260+2560+0  HDMI-1-0
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ xrandr --output HDMI-1-0 --right-of eDP1 --auto
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="4-zip-压缩包解压乱码">4. zip 压缩包解压乱码</h3>
<p>产生这种情况的原因是，zip 格式本身的缺陷导致的：
<strong>zip 格式没有指定文件名的编码格式</strong>，因此在压缩和解压时都会采用操作系统本地编码，
Windows 下简体中文采用的是 <code>GBK</code>/<code>GB312</code> 编码，而 Linux 采用的是 <code>UTF-8</code> 编码，两者不一致导致了乱码的产生。</p>
<p>解决方案:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ unzip -O GBK xxx.zip
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="5-wps-office大部分字体粗体出现过粗无法正常显示问题">5. wps-office大部分字体粗体出现过粗无法正常显示问题</h3>
<p>问题: freetype2 更新至 2.13.0 以上版本后出现的问题，导致 wps-office 文档编辑文字大部分字体设置粗体出现过粗无法正常显示。</p>
<p>解决方案：</p>
<p><a href="https://bbs.archlinux.org/viewtopic.php?id=288562" target="_blank" rel="noopener noreffer ">freetype2 降级至 2.13.0</a></p>
<ol>
<li>
<p>Download <a href="https://pan.baidu.com/s/15AIkxKqvTwy9Q-DS16QQIQ?pwd=ft13" target="_blank" rel="noopener noreffer ">freetype2.13.0</a></p>
</li>
<li>
<p>降级 <code>sudo pacman -U freetype2-2.13.0-1-x86_64.pkg.tar.zst</code></p>
</li>
<li>
<p>修改 <code>/etc/pacman.conf</code> -&gt; <code>IgnorePkg = freetype2</code>，排除掉这个包（不让它更新） <code>freetype2: ignoring package upgrade (2.13.0-1 =&gt; 2.13.2-1)</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ env <span class="nv">LD_LIBRARY_PATH</span><span class="o">=</span>/usr/local/freetype2-2.13.0-1-x86_64/usr/lib
</span></span><span class="line"><span class="cl">$ update-desktop-database ~/.local/share/applications
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ol>
<h3 id="6-wpspdf-无法打开-pdf-文件">6. wpspdf 无法打开 PDF 文件</h3>
<p>wpspdf 依赖于 libtiff5.so.5 以支撑其 PDF 功能。
而系统更新后，Arch Linux 提供的是 libtiff.so.6 或更新版本，导致其无法正常工作。</p>
<p>解决方案：</p>
<p>安装 <a href="https://aur.archlinux.org/packages/libtiff5/" target="_blank" rel="noopener noreffer ">libtiff5</a></p>
<h3 id="7-wps-无法输入中文">7. WPS 无法输入中文</h3>
<p><a href="https://wiki.archlinuxcn.org/wiki/WPS_Office#Fcitx5_%E6%97%A0%E6%B3%95%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87" target="_blank" rel="noopener noreffer ">解决方案</a> - <code>wpp</code> <code>wpspdf</code> <code>wpp</code> <code>et</code></p>
<h3 id="8-lx-music-数据同步失败">8. lx-music 数据同步失败</h3>
<p>解决方案</p>
<ol>
<li><strong>确保PC端的同步服务已启用成功</strong>: 若连接码、同步服务地址没有内容，则证明服务启动失败，此时看启用同步功能复选框后面的错误信息自行解决</li>
<li>在手机浏览器地址栏输入<a href="http://x.x.x.x:5963/hello%e5%90%8e%e5%9b%9e%e8%bd%a6%ef%bc%8c%e8%8b%a5%e6%ad%a4%e5%9c%b0%e5%9d%80%e5%8f%af%e4%bb%a5%e6%89%93%e5%bc%80%e5%b9%b6%e6%98%be%e7%a4%ba" target="_blank" rel="noopener noreffer ">http://x.x.x.x:5963/hello后回车，若此地址可以打开并显示</a> Hello~::^-^::<del>v4</del>，则证明移动端与PC端网络已互通，</li>
<li>若移动端无法打开第2步的地址，则在PC端的浏览器地址栏输入并打开该地址，若可以打开，则可能性如下：
<ul>
<li>LX Music PC端被<strong>电脑防火墙</strong>拦截</li>
<li><strong>PC端与移动端不在同一个网络下</strong>，</li>
<li>路由器开启了AP隔离（一般在公共网络下会出现这种情况）</li>
</ul>
</li>
<li>要验证双方是否在同一个网络或是否开启AP隔离，可以在电脑打开cmd使用ping命令ping移动端显示的ip地址，若可以通则说明网络正常</li>
</ol>]]></description>
</item>
<item>
    <title>建站指南(GitHub Pages &#43; Hugo)</title>
    <link>https://kydance.github.io/posts/build-blog/</link>
    <pubDate>Wed, 17 Apr 2024 21:42:02 &#43;0800</pubDate>
    <author>kyden</author>
    <guid>https://kydance.github.io/posts/build-blog/</guid>
    <description><![CDATA[<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw" aria-hidden="true"></i>导语<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">借助于 Github Pages 提供的静态网站托管服务，并采用了 Hugo 这一开源项目，加快了建站流程，而且有多种开源网站主题可供选择.</div>
        </div>
    </div>
<h2 id="i-前言">I. 前言</h2>
<p>在博客网站搭建完成之后，有充分的理由相信，自己在未来很长一段时间内将不会再次重复建站。</p>
<p><strong>常言道天有不测风云，为了防止各种意外情况发生，导致本博客网站无法正常使用，同时防止自己忘记搭建流程，记录于此。</strong></p>
<hr>
<h2 id="ii-效果">II. 效果</h2>
<figure>
</figure>

<hr>
<h2 id="iii-相关知识简介">III. 相关知识简介</h2>
<h3 id="github-pages">Github Pages</h3>
<p>GitHub Pages 是一个免费的静态网站托管服务，它允许用户通过 GitHub 存储库来托管和发布网页，可以使用它来展示项目文档、博客或个人简历。</p>
<figure>
</figure>

<p>现阶段，Github Pages 支持公共存储库的免费的托管；对于私有仓库，需要进行缴费。</p>
<hr>
<h3 id="hugo">Hugo</h3>
<p>官方号称，<a href="https://gohugo.io/" target="_blank" rel="noopener noreffer ">Hugo</a> 是世界上最快的网站建设框架(The world’s fastest framework for building websites)。</p>
<figure>
</figure>

<hr>
<h2 id="iv-steps">IV. Steps</h2>
<h3 id="1-github-仓库创建">1. Github 仓库创建</h3>
<p>需要创建两个仓库，一个用于网站源码管理(<code>A</code>)，一个用于网站部署(<code>B</code>):</p>
<ul>
<li><code>A</code> 可以是 <code>public</code>，也可以是 <code>private</code>；</li>
<li><code>B</code> 仓库的名称必须是 <code>&lt;username&gt;.github.io</code>（<code>username</code> 是 Github <code>Accout</code> 中<code>username</code>，不是 <code>profile</code> 中的 <code>Name</code>），同时还需要添加 <code>README.md</code>，例如：<strong><code>kydance.github.io</code></strong>.</li>
</ul>
<hr>
<h3 id="2-使用-hugo-创建网站">2. 使用 Hugo 创建网站</h3>
<p>首先，使用 Git 将 <code>A</code> 拉取下来:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git clone git@github.com:kydance/blog.git
</span></span></code></pre></td></tr></table>
</div>
</div><p>然后，进入本地的 <code>A</code> 目录（即，<code>blog</code>）下，使用 hugo 建站：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># Linux: Install Hugo</span>
</span></span><span class="line"><span class="cl">$ sudo pacman -S hugo
</span></span><span class="line"><span class="cl"><span class="c1"># Verify</span>
</span></span><span class="line"><span class="cl">$ hugo version
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 建站，然后将生成的内容复制到 `A` 仓库中</span>
</span></span><span class="line"><span class="cl">$ hugo new blog
</span></span><span class="line"><span class="cl">$ mv blog/ .
</span></span><span class="line"><span class="cl">$ rm -rf blog
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h3 id="3-hugo-设置网站主题">3. Hugo 设置网站主题</h3>
<p>可以从 <a href="https://themes.gohugo.io/" target="_blank" rel="noopener noreffer ">Hugo Themes</a> 挑选合适的主题进行应用：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ <span class="nb">cd</span> themes
</span></span><span class="line"><span class="cl">$ git clone https://github.com/kakawait/hugo-tranquilpeak-theme.git tranquilpeak
</span></span></code></pre></td></tr></table>
</div>
</div><p>安装 Hugo 主题后，根据个人情况修改相应的配置文件即可；</p>
<hr>
<h3 id="4-文章管理">4. 文章管理</h3>
<h4 id="启动-hugo-server">启动 Hugo server</h4>
<p>启动本地 server：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ hugo server -D
</span></span></code></pre></td></tr></table>
</div>
</div><p>浏览器打开 <a href="http://localhost:1313/" target="_blank" rel="noopener noreffer ">http://localhost:1313/</a> 进行预览；</p>
<h4 id="新建文章">新建文章</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># `post/Golang/Go.md` 表明 markdown 的路径</span>
</span></span><span class="line"><span class="cl">$ hugo new content <span class="sb">`</span>post/Golang/Go.md<span class="sb">`</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>一键创建文章</strong>: <code>./new-blog.sh &lt;name&gt;</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nv">CONTENT_PATH</span><span class="o">=</span>posts/
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Welcome to the new-blog.sh script!</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> -e <span class="s2">&#34;\033[0;32mCreating new blog post...\033[0m&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Check if the user has provided an argument</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> <span class="nv">$#</span> -ne <span class="m">1</span> <span class="o">]</span>
</span></span><span class="line"><span class="cl">    <span class="k">then</span> <span class="nb">echo</span> -e <span class="s2">&#34;\033[0;31mMissing one argument, Usage: new-blog.sh &lt;blog-name&gt;\033[0m&#34;</span><span class="p">;</span> exit<span class="p">;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Get the blog name from the user</span>
</span></span><span class="line"><span class="cl"><span class="nv">CONTENT_PATH</span><span class="o">=</span><span class="nv">$CONTENT_PATH$1</span>/<span class="nv">$1</span>.md
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> -e <span class="s2">&#34;\033[0;32mBlog path: </span><span class="nv">$CONTENT_PATH</span><span class="s2">\033[0m&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Create the new blog post</span>
</span></span><span class="line"><span class="cl">hugo new content <span class="nv">$CONTENT_PATH</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Success</span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> -e <span class="s2">&#34;\033[0;32mCreate new blog post </span><span class="nv">$CONTENT_PATH</span><span class="s2"> successful.\033[0m&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h4 id="部署文章">部署文章</h4>
<h5 id="构建-hugo-网站相关静态文件">构建 Hugo 网站相关静态文件</h5>
<p>Hugo 将构建完成的静态内容保存到 <code>A</code> 仓库中的 <code>public</code> 文件夹中；</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ hugo
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h5 id="部署">部署</h5>
<p>进入 <code>public</code> 目录，利用 Git 进行管理该文件夹，并推送到远程 <code>B</code> 仓库中：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git init
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;first commit&#34;</span>
</span></span><span class="line"><span class="cl">$ git branch -M master
</span></span><span class="line"><span class="cl">$ git remote add origin https://github.com/kydance/kydance.github.io.git
</span></span><span class="line"><span class="cl">$ git push -u origin master
</span></span></code></pre></td></tr></table>
</div>
</div><p>自动化一键部署：<code>deploy.sh</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="cp">#!/bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> -e <span class="s2">&#34;\033[0;32mDeploying updates to GitHub...\033[0m&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Build the project.</span>
</span></span><span class="line"><span class="cl">hugo <span class="c1"># if using a theme, replace with hugo -t</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Go To Public folder</span>
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> public
</span></span><span class="line"><span class="cl"><span class="c1"># Add changes to git.</span>
</span></span><span class="line"><span class="cl">git add .
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Commit changes.</span>
</span></span><span class="line"><span class="cl"><span class="nv">msg</span><span class="o">=</span><span class="s2">&#34;rebuilding site `date` &#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">echo</span> -e <span class="s2">&#34;\033[0;32m</span><span class="nv">$msg</span><span class="s2">\033[0m&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="o">[</span> <span class="nv">$#</span> -eq <span class="m">1</span> <span class="o">]</span>
</span></span><span class="line"><span class="cl">    <span class="k">then</span> <span class="nv">msg</span><span class="o">=</span><span class="s2">&#34;</span><span class="nv">$1</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="k">fi</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">git commit -m <span class="s2">&#34;</span><span class="nv">$msg</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Push source and build repos.</span>
</span></span><span class="line"><span class="cl">git push origin master
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Come Back up to the Project Root</span>
</span></span><span class="line"><span class="cl"><span class="nb">cd</span> ..
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h4 id="删除文章">删除文章</h4>
<p>进入 <code>blog/posts/</code> 目录中，删除，目标文件夹（包含相关文章资源）即可；</p>
<p>NOTE：<code>blog/public</code> 中相关文件可以删除，也可以不删除，推荐删除；</p>
<hr>
<h3 id="5-google-analytics">5. Google Analytics</h3>
<p>首先，在 <a href="https://analytics.google.com/" target="_blank" rel="noopener noreffer ">Google Analytics</a> 网站中注册、设置完成相应选项，即可获取 ID：<code>G-XXXXXXXXXX</code>；</p>
<p>然后在 <code>layout/_default/baseof.html</code> 文件中添加以下代码即可：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-HTML" data-lang="HTML"><span class="line"><span class="cl"><span class="c">&lt;!-- Google tag (gtag.js) --&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span> <span class="na">async</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;https://www.googletagmanager.com/gtag/js?id=G-XXXXXXXXXX&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="nb">window</span><span class="p">.</span><span class="nx">dataLayer</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">dataLayer</span> <span class="o">||</span> <span class="p">[];</span>
</span></span><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">gtag</span><span class="p">(){</span><span class="nx">dataLayer</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);}</span>
</span></span><span class="line"><span class="cl"><span class="nx">gtag</span><span class="p">(</span><span class="s1">&#39;js&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">());</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">gtag</span><span class="p">(</span><span class="s1">&#39;config&#39;</span><span class="p">,</span> <span class="s1">&#39;G-XXXXXXXXXX&#39;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>该段代码获取方法如下：</p>
<p><a href="https://www.google.com/analytics/web" target="_blank" rel="noopener noreffer ">Google Analytics</a> -&gt;
<strong>管理</strong> -&gt;
&ldquo;媒体资源设置&quot;列中的<strong>数据流</strong> -&gt;
网站 -&gt;
对应的数据流 -&gt;
&ldquo;Google 代码&rdquo; 下的<strong>查看代码说明</strong> -&gt;
&ldquo;安装说明&rdquo; 选择<strong>手动添加</strong>.</p>
<blockquote>
<p><strong>建议添加完成后，在 Google Analytics 分析中进行测试，确保生效</strong></p>
</blockquote>
<hr>
<h3 id="6-gitalk-评论系统">6. Gitalk 评论系统</h3>
<blockquote>
<p><strong>Gitalk 的评论采用的是 PR/Issue 的方式存储评论</strong>，因此，一般需要新建一个专门的 Repo，例如<code>kydance/gitalk</code>.</p>
</blockquote>
<ol>
<li>
<p>GitHub 申请注册<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener noreffer ">新应用</a>，并填写以下相关内容：</p>
<ul>
<li><code>Application name</code>: 随意</li>
<li><code>Homepage URL</code>: 包含 <code>http/https</code> 前缀，例如<code>https://kydance.github.io</code></li>
<li><code>Authorization callback URL</code>: 和上面 <code>Homepage URL</code> 保持一致就行</li>
</ul>
<p></p>
</li>
<li>
<p>注册完成后，手动生成 <code>Client secrets</code>(<em>只会出现一次</em>)，同时获得 <code>Client ID</code>.</p>
</li>
<li>
<p>最后，在主题设置中填写相应信息即可，例如 <code>LoveIt</code> 中的 <code>config.toml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-TOML" data-lang="TOML"><span class="line"><span class="cl"><span class="p">[</span><span class="nx">params</span><span class="p">.</span><span class="nx">page</span><span class="p">.</span><span class="nx">comment</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nx">enable</span> <span class="p">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="p">[</span><span class="nx">params</span><span class="p">.</span><span class="nx">page</span><span class="p">.</span><span class="nx">comment</span><span class="p">.</span><span class="nx">gitalk</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="nx">enable</span> <span class="p">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">        <span class="nx">owner</span> <span class="p">=</span> <span class="s2">&#34;lutianen&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">repo</span> <span class="p">=</span> <span class="s2">&#34;gitalk&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">clientId</span> <span class="p">=</span> <span class="s2">&#34;xxxxxxxxxxxxxxxxxxxx&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">clientSecret</span> <span class="p">=</span> <span class="s2">&#34;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div></li>
</ol>
<hr>
<h3 id="7-网站运行时间统计">7. 网站运行时间统计</h3>
<p>在 <code>footer.html</code> 加入以下内容即可：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-HTML" data-lang="HTML"><span class="line"><span class="cl">{{- /* runtime */ -}}
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">br</span><span class="p">&gt;&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nx">siteTime</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">seconds</span> <span class="o">=</span> <span class="mi">1000</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">minutes</span> <span class="o">=</span> <span class="nx">seconds</span> <span class="o">*</span> <span class="mi">60</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">hours</span> <span class="o">=</span> <span class="nx">minutes</span> <span class="o">*</span> <span class="mi">60</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">days</span> <span class="o">=</span> <span class="nx">hours</span> <span class="o">*</span> <span class="mi">24</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">years</span> <span class="o">=</span> <span class="nx">days</span> <span class="o">*</span> <span class="mi">365</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">today</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">startYear</span> <span class="o">=</span> <span class="mi">2024</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">startMonth</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">startDate</span> <span class="o">=</span> <span class="mi">18</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">startHour</span> <span class="o">=</span> <span class="mi">12</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">startMinute</span> <span class="o">=</span> <span class="mi">57</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">startSecond</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">todayYear</span> <span class="o">=</span> <span class="nx">today</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">todayMonth</span> <span class="o">=</span> <span class="nx">today</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">todayDate</span> <span class="o">=</span> <span class="nx">today</span><span class="p">.</span><span class="nx">getDate</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">todayHour</span> <span class="o">=</span> <span class="nx">today</span><span class="p">.</span><span class="nx">getHours</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">todayMinute</span> <span class="o">=</span> <span class="nx">today</span><span class="p">.</span><span class="nx">getMinutes</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">todaySecond</span> <span class="o">=</span> <span class="nx">today</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">t1</span> <span class="o">=</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">UTC</span><span class="p">(</span><span class="nx">startYear</span><span class="p">,</span> <span class="nx">startMonth</span><span class="p">,</span> <span class="nx">startDate</span><span class="p">,</span> <span class="nx">startHour</span><span class="p">,</span> <span class="nx">startMinute</span><span class="p">,</span> <span class="nx">startSecond</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">t2</span> <span class="o">=</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">UTC</span><span class="p">(</span><span class="nx">todayYear</span><span class="p">,</span> <span class="nx">todayMonth</span><span class="p">,</span> <span class="nx">todayDate</span><span class="p">,</span> <span class="nx">todayHour</span><span class="p">,</span> <span class="nx">todayMinute</span><span class="p">,</span> <span class="nx">todaySecond</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">diff</span> <span class="o">=</span> <span class="nx">t2</span> <span class="o">-</span> <span class="nx">t1</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">diffYears</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">diff</span> <span class="o">/</span> <span class="nx">years</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">diffDays</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">diff</span> <span class="o">/</span> <span class="nx">days</span><span class="p">)</span> <span class="o">-</span> <span class="nx">diffYears</span> <span class="o">*</span> <span class="mi">365</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">diffHours</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">diff</span> <span class="o">-</span> <span class="p">(</span><span class="nx">diffYears</span> <span class="o">*</span> <span class="mi">365</span> <span class="o">+</span> <span class="nx">diffDays</span><span class="p">)</span> <span class="o">*</span> <span class="nx">days</span><span class="p">)</span> <span class="o">/</span> <span class="nx">hours</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">diffMinutes</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">diff</span> <span class="o">-</span> <span class="p">(</span><span class="nx">diffYears</span> <span class="o">*</span> <span class="mi">365</span> <span class="o">+</span> <span class="nx">diffDays</span><span class="p">)</span> <span class="o">*</span> <span class="nx">days</span> <span class="o">-</span> <span class="nx">diffHours</span> <span class="o">*</span> <span class="nx">hours</span><span class="p">)</span> <span class="o">/</span>
</span></span><span class="line"><span class="cl">            <span class="nx">minutes</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="kd">var</span> <span class="nx">diffSeconds</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">((</span><span class="nx">diff</span> <span class="o">-</span> <span class="p">(</span><span class="nx">diffYears</span> <span class="o">*</span> <span class="mi">365</span> <span class="o">+</span> <span class="nx">diffDays</span><span class="p">)</span> <span class="o">*</span> <span class="nx">days</span> <span class="o">-</span> <span class="nx">diffHours</span> <span class="o">*</span> <span class="nx">hours</span> <span class="o">-</span>
</span></span><span class="line"><span class="cl">            <span class="nx">diffMinutes</span> <span class="o">*</span> <span class="nx">minutes</span><span class="p">)</span> <span class="o">/</span> <span class="nx">seconds</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nx">startYear</span> <span class="o">==</span> <span class="nx">todayYear</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;sitetime&#34;</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&#34;已安全运行 &#34;</span> <span class="o">+</span> <span class="nx">diffDays</span> <span class="o">+</span> <span class="s2">&#34; 天 &#34;</span> <span class="o">+</span> <span class="nx">diffHours</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34; 小时 &#34;</span> <span class="o">+</span> <span class="nx">diffMinutes</span> <span class="o">+</span> <span class="s2">&#34; 分钟 &#34;</span> <span class="o">+</span> <span class="nx">diffSeconds</span> <span class="o">+</span> <span class="s2">&#34; 秒&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">            <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;sitetime&#34;</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="s2">&#34;已安全运行 &#34;</span> <span class="o">+</span> <span class="nx">diffYears</span> <span class="o">+</span> <span class="s2">&#34; 年 &#34;</span> <span class="o">+</span> <span class="nx">diffDays</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34; 天 &#34;</span> <span class="o">+</span> <span class="nx">diffHours</span> <span class="o">+</span> <span class="s2">&#34; 小时 &#34;</span> <span class="o">+</span> <span class="nx">diffMinutes</span> <span class="o">+</span> <span class="s2">&#34; 分钟 &#34;</span> <span class="o">+</span> <span class="nx">diffSeconds</span> <span class="o">+</span> <span class="s2">&#34; 秒&#34;</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="nx">setInterval</span><span class="p">(</span><span class="nx">siteTime</span><span class="p">,</span> <span class="mi">1000</span><span class="p">);</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</span></span><span class="line"><span class="cl"><span class="p">&lt;</span><span class="nt">span</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;sitetime&#34;</span><span class="p">&gt;</span>载入运行时间...<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><hr>
<h2 id="v-视频嵌入">V. 视频嵌入</h2>
<div class="bilibili"><iframe src="//player.bilibili.com/player.html?bvid=BV1Vu411r7mw&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div>



    
    <div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
      <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" loading="eager" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube-nocookie.com/embed/C314KAeZic4?autoplay=0&controls=1&end=0&loop=0&mute=0&start=0" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" title="YouTube video"
      ></iframe>
    </div>

<hr>
<h2 id="vi-problem-and-solution">VI. Problem And Solution</h2>
<h3 id="添加图片不显示">添加图片不显示</h3>
<p>Hugo 的配置文件和文章中的引用图片都是以 static 作为根目录，因此图片无法显示的解决方案如下：</p>
<ol>
<li>将图片放入 <code>static/img</code> 目录下</li>
<li>在文章中的图片引用方式为：<code>/img/xxx.png</code></li>
<li>无法采用 Typora 等软件进行预览，需要在网页中进行预览: <a href="http://localhost:1313/" target="_blank" rel="noopener noreffer ">http://localhost:1313/</a></li>
</ol>
<hr>
<h3 id="文章缩略">文章缩略</h3>
<p>如果想要文章在某个地方缩略，只需要在该位置加入  <code>&lt;!--more--&gt;</code> 即可。</p>
<hr>
<h2 id="vii-references">VII. References</h2>
<ul>
<li><a href="https://docs.github.com/en/pages/getting-started-with-github-pages/about-github-pages" target="_blank" rel="noopener noreffer ">Abot Github Pages</a></li>
<li><a href="https://gohugo.io/" target="_blank" rel="noopener noreffer ">Hugo</a></li>
<li><a href="https://www.gagahappy.com/gitalk-install/" target="_blank" rel="noopener noreffer ">Gitalk 评论系统安装</a></li>
<li><a href="https://zz2summer.github.io/github-pages-hugo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2" target="_blank" rel="noopener noreffer ">参考文章</a></li>
</ul>]]></description>
</item>
</channel>
</rss>
